/*
Given a non-empty string s, you may delete at most one character. Judge whether you can make it a palindrome.

Example 1:
Input: "aba"
Output: True
Example 2:
Input: "abca"
Output: True
Explanation: You could delete the character 'c'.
Note:
The string will only contain lowercase characters a-z. The maximum length of the string is 50000.
*/
class Solution {
    public boolean validPalindrome(String s) {
        int start=0;
        int end=s.length()-1;
        while(start<=end){
            if(s.charAt(start)!=s.charAt(end)){
                if(check(s,start+1,end) || check(s,start,end-1)){
                    return true;
                }
                else
                    return false;
            }
            start++;
            end--;
        }
        return true;
    }
    boolean check(String s,int start,int end){
        while(start<=end){
            if(s.charAt(start)!=s.charAt(end)){
            //    System.out.println(s.charAt(start));
             //   System.out.println(s.charAt(end));
                return false;
            }
            start++;
            end--;
        }
        return true;
    }
}
